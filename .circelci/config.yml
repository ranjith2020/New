version: 2.1
write_dotenv_file: &write_dotenv_file
  run:
    name: Write .env file
    command: |
      cp ~/mobile/public.ci.env .env
      [ -f .env ] && echo "Found" || echo "Not found"

test_env: &test_env
  environment:
    ENVIRONMENT: test
    API_URL: http://localhost:5000/

attach_mobile_workspace: &attach_mobile_workspace
  attach_workspace:
    at: ~/mobile

install_gems: &install_gems
  run:
    name: Install bundler and gems from bundle
    command: |
      bundle check --path=vendor/bundle || (bundle install --path=vendor/bundle --jobs=4 --retry=3 && bundle clean --force)

decrypt_environment: &decrypt_environment
  run:
    name: decrypt env based on branch
    command: |
      bundle exec ruby ./scripts/decrypt_branch_secrets.rb

source_env_file: &source_env_file
  run:
    name: export all env vars to shell
    command: |
      echo source ~/mobile/ci.env >> ~/.bash_profile
      set -o allexport; source ~/mobile/ci.env; set +o allexport
      echo $EJSON_ENV
      pwd

merge_rc_to_sprint: &merge_rc_to_sprint
  run:
    name: merge rc to sprint
    command: |
      git config --global user.name "Mobile CI"
      git config --global user.email "mobile@joinswoop.com"
      if [[ -f "known_hosts" ]]; then mkdir -p ~/.ssh && mv known_hosts ~/.ssh; fi
      bundle exec ruby scripts/merge_rc_to_sprint.rb

merge_sprint_to_master: &merge_sprint_to_master
  run:
    name: merge sprint to master
    command: |
      git config --global user.name "Mobile CI"
      git config --global user.email "mobile@joinswoop.com"
      if [[ -f "known_hosts" ]]; then mkdir -p ~/.ssh && mv known_hosts ~/.ssh; fi
      bundle exec ruby scripts/merge_sprint_to_master.rb

merge_master_to_sprint: &merge_master_to_sprint
  run:
    name: merge master to sprint
    command: |
      git config --global user.name "Mobile CI"
      git config --global user.email "mobile@joinswoop.com"
      mkdir -p ~/.ssh && mv known_hosts ~/.ssh
      bundle exec ruby scripts/merge_master_to_sprint.rb

decode_key_files: &decode_key_files
  run:
    name: decode and move any private key files.
    command: |
      echo $GOOGLE_PLAYSTORE_PRIVATE_KEY | base64 -d > ~/mobile/google_play_api_key.json
      echo $KEY_STORE | base64 -d > ~/mobile/swoop.keystore

restore_gem_cache_system_tests: &restore_gem_cache_system_tests
  restore_cache:
    keys:
      - gem-cache-system-tests-5-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
      - gem-cache-system-tests-5-{{ arch }}-{{ .Branch }}
      - gem-cache-system-tests-5

save_gem_cache_system_tests: &save_gem_cache_system_tests
  save_cache:
    key: gem-cache-system-tests-5-{{ arch }}-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
    paths:
      - vendor/bundle

add_github_known_hosts: &add_github_known_hosts
  run:
    name: decode and move any private key files.
    command: |
      ssh-keyscan -H github.com >> ~/.ssh/known_hosts
      mv ~/.ssh/known_hosts ~/mobile

executors:
  ruby:
    working_directory: ~/mobile
    docker:
      - image: circleci/ruby:2.3.7-node
  node:
    working_directory: ~/mobile
    docker:
      - image: joinswoop/circleci-mobile:8
  mac:
    working_directory: ~/mobile
    macos:
      xcode: "10.3.0"
    environment:
      FL_OUTPUT_DIR: output
      GYM_PROJECT: ios/swoop.xcodeproj
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
  android:
    working_directory: ~/mobile/android
    docker:
      - image: circleci/android:api-28
    environment:
      JVM_OPTS: -Xmx3200m

commands:
  yarn_install:
    description: "Grabs from cache and installs missing node modules"
    steps:
      - restore_cache:
          keys:
            - yarn-cache-v10.15.0-5-{{ arch }}-{{ checksum "yarn.lock" }}
            - yarn-cache-v10.15.0-5-{{ arch }}
            - yarn-cache-v10.15.0-5
      - run: yarn install
      - run:
          name: jsesc hack
          command: |
            cd ~/mobile/node_modules/babel-preset-react-app
            yarn install
            cd ~/mobile
      - save_cache:
          key: yarn-cache-v10.15.0-5-{{ arch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
            - ~/.yarn
            - ~/.cache/yarn
      # Cleaning should come after, as the cache pulls down for integrity checks
      - run: yarn cache clean

  bundle_js:
    description: "bundles the js"
    parameters:
      platform:
        type: string
        default: "ios"
      output:
        type: string
        default: "ios/main.jsbundle"
      asset_dest:
        type: string
        default: "ios"
    steps:
      - run:
          name: Build JS
          command: >-
            ./node_modules/.bin/react-native bundle
            --platform << parameters.platform >>
            --entry-file index.js
            --dev false
            --bundle-output << parameters.output >>
            --assets-dest << parameters.asset_dest >>
            --sourcemap-output sourcemap.js
            --sourcemap-sources-root ./
      - run: |
          echo $CIRCLE_SHA1.<< parameters.platform >>
          echo $(date +%s)
      - run:
          name: "Upload sourcemap to rollbar"
          command: |
            set -o allexport; source ~/mobile/ci.env; set +o allexport
            output=<< parameters.output >>
            curl https://api.rollbar.com/api/1/sourcemap \
            -F access_token=$ROLLBAR_SERVER_TOKEN \
            -F version=$CIRCLE_SHA1.<< parameters.platform >> \
            -F minified_url=http://reactnativehost/${output##*/} \
            -F source_map=@sourcemap.js \
            -F index.js=@index.js

      - run: |
          echo $PUSHWOOSH_PROJECT_ID

  deploy_hockey_app:
    description: "Deploys to hockeyapp"
    parameters:
      status:
        type: string
        default: "2"
      notify:
        type: string
        default: "1"
      #notes:
      #  type: string
      #  default: "Some new features and fixed bugs."
      notes_type:
        type: string
        default: "0"
      source_file:
        type: string
        default: ""
    steps:
      - run:
          name: Deploy to hockey app
          command: >-
            curl
            -F "status=<< parameters.status >>"
            -F "notify=<< parameters.notify >>"
            -F "release_type=$HOCKEYAPP_RELEASE_TYPE"
            -F "notes=$(git log --format=oneline -n 1 $CIRCLE_SHA1)"
            -F "notes_type=$CIRCLE_SHA1 << parameters.notes_type >>"
            -F "ipa=@<< parameters.source_file >>"
            -H "X-HockeyAppToken: $HOCKEY_APP_TOKEN"
            https://rink.hockeyapp.net/api/2/apps/upload

jobs:
  push_rc_tag:
    executor: ruby
    steps:
      - *attach_mobile_workspace
      - run:
          name: push rc tag to github
          command: |
            git config --global user.name "Mobile CI"
            git config --global user.email "mobile@joinswoop.com"
            if [[ -f "known_hosts" ]]; then mkdir -p ~/.ssh && mv known_hosts ~/.ssh; fi
            git tag v$(cat version)
            git push --tags
  merge_down_on_rc_push:
    executor: ruby
    steps:
      - *attach_mobile_workspace
      - run:
          command: |
           ls
           bundle install
      - *merge_rc_to_sprint
      - *merge_sprint_to_master

  merge_down_on_sprint_push:
    executor: ruby
    steps:
      - *attach_mobile_workspace
      - run:
          command: |
           bundle install
      - *merge_sprint_to_master

  merge_master_to_sprint:
    executor: ruby
    steps:
      - *attach_mobile_workspace
      - run:
          command: |
           bundle install
      - *merge_master_to_sprint

  setup_env:
    executor: ruby
    steps:
      - checkout
      - restore_cache:
          keys:
            - gem-cache-v2.3.9-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v2.3.9-5-{{ arch }}
      - *install_gems
      # and save our gem cache
      - save_cache:
          key: gem-cache-v2.3.9-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - *decode_key_files
      - *decrypt_environment
      - *add_github_known_hosts
      - persist_to_workspace:
          root: .
          paths:
            - ci.env
            - public.ci.env
            - google_play_api_key.json
            - swoop.keystore
            - system_tests
            - known_hosts

  checkout_and_build:
    executor: node
    steps:
      #CHECKOUT CODE
      - restore_cache:
          keys:
            - source-v7-{{ .Branch }}-{{ .Revision }}
            - source-v7-{{ .Branch }}
            - source-v7
      - checkout
      - run:
          command: git gc
      - save_cache:
          key: source-v7-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/mobile
      - *attach_mobile_workspace
      - *source_env_file
      - run:
          command: |
            mkdir -p tmp/codeclimate
            mkdir -p jest
            cc-test-reporter before-build
      - yarn_install
      - persist_to_workspace:
          root: .
          paths: .

  bump_version_number_before:
    executor: mac
    shell: /bin/bash --login -o pipefail
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - restore_cache:
          keys:
            - gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v2.3.7-5-{{ arch }}
      - *install_gems
      - save_cache:
          key: gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          command: |
           mkdir -p ~/.ssh && mv known_hosts ~/.ssh
           bundle exec ruby scripts/bump_version.rb before

  bump_version_number_after:
    executor: mac
    shell: /bin/bash --login -o pipefail
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - restore_cache:
          keys:
            - gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v2.3.7-5-{{ arch }}
      - *install_gems
      - save_cache:
          key: gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          command: |
            mkdir -p ~/.ssh && mv known_hosts ~/.ssh
            bundle exec ruby scripts/bump_version.rb
  build_license:
    executor: ruby
    description: "build license files"
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - restore_cache:
          keys:
            - gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v2.3.7-5-{{ arch }}
      - *install_gems
      # and save our gem cache
      - save_cache:
          key: gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - restore_cache:
          key: license-cache-5-{{ checksum "yarn.lock" }}
      - run:
          name: Build IOS Licenses file
          command: bundle exec ruby generate_licenses.rb --device_os=ios
      - run:
          name: Build Android Licenses file
          command: bundle exec ruby generate_licenses.rb --device_os=android
      - save_cache:
          key: license-cache-5-{{ checksum "yarn.lock" }}
          paths:
            - node_licenses.json
            - app/components/screens/licenses.ios.json
            - app/components/screens/licenses.android.json
      - persist_to_workspace:
          root: .
          paths:
            - node_licenses.json
            - app/components/screens/licenses.ios.json
            - app/components/screens/licenses.android.json
  jest:
    <<: *test_env
    executor: node
    resource_class: xlarge
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - *write_dotenv_file
      - run:
          environment:
            CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
          command: |
            JEST_JUNIT_OUTPUT=$CIRCLE_TEST_REPORTS/tmp/jest/results.xml yarn test-ci
      - run:
          command: |
            cc-test-reporter format-coverage tmp/jest/lcov.info -t lcov -o tmp/codeclimate/$CIRCLE_WORKFLOW_JOB_ID-$CIRCLE_NODE_INDEX.json
      - store_test_results:
          path: /tmp/circleci-test-results
      - store_artifacts:
          path: /tmp/circleci-artifacts
      #- run:
      #    name: Upload coverage results to Code Climate
      #    command: |
      #      set -o allexport; source ~/mobile/ci.env; set +o allexport
      #      cc-test-reporter sum-coverage tmp/codeclimate/*.json -p $(echo tmp/codeclimate/*.json| wc -w) -o tmp/codeclimate.total.json
      #      cc-test-reporter upload-coverage -i tmp/codeclimate.total.json -r $CC_TEST_REPORTER_ID

  build_ios_js:
    executor: node
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - *write_dotenv_file
      - restore_cache:
          key: license-cache-5-{{ checksum "yarn.lock" }}
      - bundle_js:
         platform: ios
         output: ios/main.jsbundle
         asset_dest: ios
      - run:
         name: Upload file size
         command: ./scripts/build-sizes.js ios-js
      - persist_to_workspace:
          root: .
          paths:
            - ios/main.jsbundle
            - ios/assets

  deploy_codepush_ios:
    executor: node
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - *write_dotenv_file
      - run:
          name: "Deploy codepush ios"
          command: ./scripts/deploy_codepush.sh ios

  build_ios:
    executor: mac
    shell: /bin/bash --login -o pipefail
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - *write_dotenv_file
      - restore_cache:
          keys:
            - gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v2.3.7-5-{{ arch }}
      - *install_gems
      - save_cache:
          key: gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
         name: Run iOS build script
         command: ./scripts/build_ios.sh
      - run:
         name: Upload file size
         command: ./scripts/build-sizes.js ios
      - run: |
          echo $PUSHWOOSH_PROJECT_ID
      - store_artifacts:
          path: output
      - persist_to_workspace:
          root: .
          paths:
            - output/gym

  deploy_ios:
    executor: mac
    shell: /bin/bash --login -o pipefail
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - *write_dotenv_file
      - restore_cache:
          keys:
            - gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v2.3.7-5-{{ arch }}
      - *install_gems
      - save_cache:
          key: gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
         name: Run our fastlane to send to hockey
         command: ./scripts/deploy_ios.sh
      #- deploy_hockey_app:
      #    source_file: ./output/gym/swoop.ipa

  build_android_js:
    executor: node
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - *write_dotenv_file
      - restore_cache:
          key: license-cache-5-{{ checksum "yarn.lock" }}
      - bundle_js:
         platform: android
         output: android/app/src/main/assets/index.android.bundle
         asset_dest: android/app/src/main/res
      - run:
         name: Upload file size
         command: ./scripts/build-sizes.js android-js
      - persist_to_workspace:
          root: .
          paths:
            - android/app/src/main/assets/index.android.bundle
            - android/app/src/main/res/*

  deploy_codepush_android:
    executor: node
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - *write_dotenv_file
      - run:
          name: "Deploy codepush android"
          command: ./scripts/deploy_codepush.sh android

  build_android:
    executor: android
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - *write_dotenv_file
      - restore_cache:
          key: jars-5-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: |
            # need this for a newline
            echo >> $ANDROID_HOME/licenses/android-sdk-license
            # then add the license key
            echo 24333f8a63b6825ea9c5514f83c2829b004d1fee >> $ANDROID_HOME/licenses/android-sdk-license
            ./gradlew androidDependencies
      - save_cache:
          paths:
            - .gradle
          key: jars-5-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Build Code
          command: |
            set -o allexport; source ~/mobile/ci.env; set +o allexport
            echo $EJSON_ENV
            if [[ $EJSON_ENV == "beta" ]]; then ./gradlew assembleDebug; fi
            if [[ $EJSON_ENV == "staging" ]]; then ./gradlew assembleDebug; fi
            if [[ $EJSON_ENV == "production" ]]; then curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -; sudo apt-get install -y nodejs; ./gradlew assembleRelease -Pandroid.injected.signing.store.file=$KEYFILE -Pandroid.injected.signing.store.password=$STORE_PASSWORD -Pandroid.injected.signing.key.alias=$KEY_ALIAS -Pandroid.injected.signing.key.password=$KEY_PASSWORD; fi
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_artifacts:
          path: app/build/outputs
          destination: apk
      - persist_to_workspace:
          root: ~/mobile
          paths:
            - android/app/build/outputs/apk/*

  system_tests:
    working_directory: ~/mobile/system_tests
    docker:
        - image: joinswoop/mobile_tests_runner
    environment:
      DOCKER_RUN: true
      ANDROID_SDK_HOME: ~/.android/avd/
    resource_class: large
    parallelism: 1
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - *restore_gem_cache_system_tests
      - *install_gems
      - *save_gem_cache_system_tests
      - run:
          name: "Checkout Emulator"
          command: cd ~/mobile/system_tests && bundle exec ruby checkout_mobile_emulator.rb checkout
      - run:
          name: Create avd and launch
          command: |
            EMULATOR_HOST=`cat emulator_ip.txt`
            echo $EMULATOR_HOST
            echo $GENYMOTION_KEY | base64 -d > genymotion.pem
            chmod 400 genymotion.pem
            ssh -4 -o StrictHostKeyChecking=no -i genymotion.pem shell@$EMULATOR_HOST setprop persist.sys.usb.config adb
            ssh -4 -o StrictHostKeyChecking=no -i genymotion.pem -NL 5555:localhost:5555 shell@$EMULATOR_HOST
          background: true
      - run:
          name: "Start appium"
          command: appium
          background: true
      - run:
          name: "Wait for appium to start and emulator to warm up"
          command: sleep 5
      - run:
          name: Run mobile tests
          command: |
            export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib
            export PATH="$HOME/Android/platform-tools:$PATH"
            cd ~/mobile/system_tests && bundle exec cucumber
      - run:
          name: "Check in Emulator"
          command: cd ~/mobile/system_tests && bundle exec ruby checkout_mobile_emulator.rb checkin
          when: always
      - store_artifacts:
          path: ~/mobile/system_tests/screenshots
          when: always


  deploy_android:
    executor: mac
    shell: /bin/bash --login -o pipefail
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - *write_dotenv_file
      - restore_cache:
          keys:
            - gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v2.3.7-5-{{ arch }}
      - *install_gems
      - save_cache:
          key: gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
         name: Run our fastlane to send to hockey
         command: |
          set -o allexport; source ~/mobile/ci.env; set +o allexport
          bundle exec fastlane android hockey_deploy
      - run:
         name: Upload file size
         command: ./scripts/build-sizes.js android

  build_android_bundle:
    resource_class: large
    executor: android
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - *write_dotenv_file
      - restore_cache:
          key: jars-5-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
         name: Chmod permissions
         command: sudo chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: |
            # need this for a newline
            echo >> $ANDROID_HOME/licenses/android-sdk-license
            # then add the license key
            echo 24333f8a63b6825ea9c5514f83c2829b004d1fee >> $ANDROID_HOME/licenses/android-sdk-license
            ./gradlew androidDependencies
      - save_cache:
          paths:
            - .gradle
          key: jars-5-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Build Code
          command: |
            set -o allexport; source ~/mobile/ci.env; set +o allexport
            echo $EJSON_ENV
            if [[ $EJSON_ENV == "production" ]]; then
            ./gradlew clean;
            curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -; sudo apt-get install -y nodejs; ./gradlew :app:bundleRelease --no-daemon --max-workers 2 -Pandroid.injected.signing.store.file=$KEYFILE -Pandroid.injected.signing.store.password=$STORE_PASSWORD -Pandroid.injected.signing.key.alias=$KEY_ALIAS -Pandroid.injected.signing.key.password=$KEY_PASSWORD;
            fi
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_artifacts:
          path: app/build/outputs
          destination: bundle
      - persist_to_workspace:
          root: ~/mobile
          paths:
            - android/app/build/outputs/bundle/*

  deploy_android_to_playstore:
    executor: ruby
    shell: /bin/bash --login -o pipefail
    steps:
      - *attach_mobile_workspace
      - restore_cache:
          keys:
            - gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - gem-cache-v2.3.7-5-{{ arch }}
      - *install_gems
      # and save our gem cache
      - save_cache:
          key: gem-cache-v2.3.7-5-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - *source_env_file
      - run:
         name: Run our fastlane job
         command: |
          bundle exec fastlane supply init
          bundle exec fastlane android playstore

  stop_emulators:
    executor: ruby
    steps:
      - *attach_mobile_workspace
      - *source_env_file
      - run:
          name: "Change to system test dir"
          command: cd system_tests && bundle && bundle exec ruby checkout_mobile_emulator.rb stop_all

workflows:
  version: 2
  build_and_test:
    jobs:
    # Disable merge downs as they are currently causing conflicting code to be commited.
      # - merge_down_on_rc_push:
      #     filters:
      #       branches:
      #         only:
      #           - rc
      #     requires:
      #       - checkout_and_build
      # - merge_down_on_sprint_push:
      #     filters:
      #       branches:
      #         only:
      #           - sprint
      #     requires:
      #       - checkout_and_build
      - setup_env
      - checkout_and_build:
          requires:
            - setup_env
      - bump_version_number_before: #This only applies to master and rc
         requires:
           - checkout_and_build
      - build_license:
          requires:
            - checkout_and_build
      - jest:
         requires:
           - checkout_and_build
      - build_ios_js:
          requires:
            - checkout_and_build
            - build_license
            - bump_version_number_before
      - deploy_codepush_ios:
          requires:
            - build_ios_js
          filters:
            branches:
              only:
                - rc
      - build_ios:
          requires:
            - build_ios_js
            - jest
      - build_android_js:
          requires:
            - checkout_and_build
            - build_license
            - bump_version_number_before
      - deploy_codepush_android:
          requires:
            - build_android_js
          filters:
            branches:
              only:
                - rc
      - build_android:
          requires:
            - build_android_js
            - jest
      # remove system tests for now
      # - system_tests:
      #     requires:
      #       - build_android
      - deploy_ios:
          requires:
            # - system_tests
            - build_ios
          filters:
            branches:
              only:
                - master
                - sprint
                - rc
      - deploy_android:
          requires:
            # - system_tests
            - build_android
          filters:
            branches:
              only:
                - master
                - sprint
                - rc
      - build_android_bundle:
          requires:
            - build_android_js
            - jest
            - deploy_android
          filters:
            branches:
              only:
                - rc
      - deploy_android_to_playstore:
          requires:
            # - system_tests
            - build_android_bundle
          filters:
            branches:
              only:
                - rc
      - push_rc_tag:
          requires:
            - deploy_android
            - deploy_ios
          filters:
            branches:
              only:
                - rc
      - bump_version_number_after:
         requires:
           - build_android
           - deploy_ios
      # - merge_master_to_sprint:
      #     requires:
      #       - setup_env
      #       - bump_version_number_after
      #     filters:
      #       branches:
      #         only:
      #           - master
  nightly:
    triggers:
      - schedule:
          cron: "0 7 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - setup_env
      - stop_emulators:
          requires:
            - setup_env
